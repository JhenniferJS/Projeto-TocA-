/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Playlist;
import controller.PlaylistDAO;
import static view.TelaLogin.cpf;
import static view.TelaLogin.telaPrincipal;

/**
 * Classe para excluir playlists do usuario.
 * @author Jhennifer
 */
public class ExcluirPlaylist extends javax.swing.JFrame {

    /**
     * Creates new form ExcluirPlaylist
     */
    public ExcluirPlaylist() {
        initComponents();
        //lendo a tabela referente as playlists
        DefaultTableModel modelo = (DefaultTableModel) this.jTablePlaylist.getModel();
        this.jTablePlaylist.setRowSorter(new TableRowSorter(modelo));
        this.readJTable();      
    }
     public JTable getjTablePlaylist() {
        return jTablePlaylist;
    }  
    
    /**
     * Método para ler e salvar dados na tabela referente as playlists
     */
    public void readJTable(){
        DefaultTableModel modelo = (DefaultTableModel) this.jTablePlaylist.getModel();
        PlaylistDAO playlistDAO = new PlaylistDAO();
        for(Playlist p: playlistDAO.buscarPlaylistCadastradas(cpf)){
            modelo.addRow(new Object[]{
                p.getNome(),
                p.getNumMusicas()
            });
                    
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlaylist = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setResizable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_size_lado-removebg-preview.png"))); // NOI18N

        jTablePlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Número de Músicas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePlaylist);

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        excluirPlaylist();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Método para excluir a playlist
     */
    private void excluirPlaylist(){
        boolean sucesso = false;
        //quantidade de itens selecionados
        int rowIndex = jTablePlaylist.getSelectedRow();
        
        //rowIndex = 1 -> nenhum item selecionado
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Selecione a playlist a ser excluida!");
            return;
        }
        
        //conteudo do item selecionado
        String nome = (String) this.jTablePlaylist.getModel().getValueAt(rowIndex, 0);

        PlaylistDAO playlistDAO = new PlaylistDAO();
        boolean achou = playlistDAO.buscarExistenciaDePlaylist(nome, cpf);
        if (achou) {
            sucesso = playlistDAO.deletarPlaylist(nome, cpf);
            if(sucesso){
                JOptionPane.showMessageDialog(this, "Playlist excluida com sucesso!");
                ((DefaultTableModel) jTablePlaylist.getModel()).removeRow(jTablePlaylist.getSelectedRow());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Tente novamente");
        }
    }                        
    
    /**
     * Método para exibir a classe TelaPrincipal
     */
    private void chamarTelaPrincipal() {
        if (telaPrincipal == null) {
            telaPrincipal = new TelaPrincipal();
            telaPrincipal.setVisible(true);
        }
        this.setVisible(false);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        chamarTelaPrincipal();
    }//GEN-LAST:event_jButton2ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePlaylist;
    // End of variables declaration//GEN-END:variables
}
