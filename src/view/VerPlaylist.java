/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Musica;
import controller.MusicaDAO;
import model.Playlist;
import controller.PlaylistDAO;
import static view.TelaLogin.cpf;

/**
 * Classe para o usuario visualizar suas playlists e o conteúdo presente nelas
 * @author Jhennifer
 */
public class VerPlaylist extends javax.swing.JFrame {

    /**
     * Creates new form VerPlaylist
     */
    public VerPlaylist() {
        initComponents();
       //lendo a tabela referente as playlists
        DefaultTableModel modelo = (DefaultTableModel) this.jTablePlaylist.getModel();
        this.jTablePlaylist.setRowSorter(new TableRowSorter(modelo));
        readJTablePlaylist();
    }

    public JTable getjTablePlaylist() {
        return jTablePlaylist;
    }

    /**
     * Método para ler e salvar as informações das playlists na tabela
     */
    public void readJTablePlaylist() {
        DefaultTableModel modeloPlaylist = (DefaultTableModel) this.jTablePlaylist.getModel();
        PlaylistDAO playlistDAO = new PlaylistDAO();
        for (Playlist p : playlistDAO.buscarPlaylistCadastradas(cpf)) {
            modeloPlaylist.addRow(new Object[]{
                p.getNome(),
                p.getNumMusicas()
            });

        }
    }
    
    /**
     * Método para ler e salvar as informações das musicas na tabela
     */
    public void readJTable(String nomePlaylist){
        DefaultTableModel modelo = (DefaultTableModel) this.jTableMusicas.getModel();
        MusicaDAO musicaDAO = new MusicaDAO();
        for(Musica m: musicaDAO.buscarMusicaDePlaylist(nomePlaylist)){
            modelo.addRow(new Object[]{
                m.getNome(),
                m.getArtista(),
                m.getGenero(),
                m.getAlbum(),
                m.getDuracao()
            });
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlaylist = new javax.swing.JTable();
        jButtonAbrir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMusicas = new javax.swing.JTable();

        setResizable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_size_lado-removebg-preview.png"))); // NOI18N

        jTablePlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Número de Músicas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePlaylist);

        jButtonAbrir.setText("Abrir Playlist");
        jButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirActionPerformed(evt);
            }
        });

        jTableMusicas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Artista", "Genero", "Album", "Duracao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableMusicas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonAbrir)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAbrir)
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirActionPerformed
        //limpando os dados da tabela referente as musicas
        this.jTableMusicas.selectAll();
        int rowIndex1 = this.jTableMusicas.getSelectedRowCount();
        if(rowIndex1 > 0){
            for(int i = 0; i <rowIndex1; i++){
                ((DefaultTableModel) jTableMusicas.getModel()).removeRow(jTableMusicas.getSelectedRow());
            }
        }
        
        boolean sucesso = false;
        //quantidade de playlists selecionadas
        int rowIndex = jTablePlaylist.getSelectedRow();
        //rowIndex = -1 -> nenhuma playlist selecionada
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Selecione a playlist a ser visitada!");
            return;
        }
        //conteudo da linha selecionada
        String nome = (String) this.jTablePlaylist.getModel().getValueAt(rowIndex, 0);
       
        readJTable(nome);  
    }//GEN-LAST:event_jButtonAbrirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbrir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMusicas;
    private javax.swing.JTable jTablePlaylist;
    // End of variables declaration//GEN-END:variables

}
